{"version":3,"file":"data.d.js","names":[],"sources":["../src/data.d.ts"],"sourcesContent":["import type React from 'react';\r\n\r\nexport type timestampRange = [number, number];\r\n\r\nexport type ContainerType = {\r\n  data: dataType[];\r\n  initDay?: number;\r\n  onChange?: (params: number) => void;\r\n  height?: number;\r\n  scheduleRender?: (props: {\r\n    data: dataType,\r\n    timestampRange: timestampRange,\r\n  }) => React.ReactNode;\r\n  businessRender?: (timestamp: number) => React.ReactNode;\r\n  mode?: 'day' | 'week';\r\n  onSlideChange?: (currTimestamp: [number, number], data: dataType) => void;\r\n  isDraggable?: boolean;\r\n  rangeStartAndEndKey?: [string, string];\r\n};\r\n\r\nexport type dataType = {\r\n  startTime: number;\r\n  endTime: number;\r\n  [propsName: string]: any;\r\n};\r\n\r\nexport type WeekType = [\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n];\r\n\r\nexport type HourType = [\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n  number,\r\n];\r\n\r\nexport type WeeklyOptionsType = {\r\n  dateTextList: WeekType | [];\r\n};\r\n\r\nexport type CalendarHeaderType = {\r\n  businessRender?: (timestamp: number) => React.ReactNode;\r\n};\r\n\r\nexport type DailyOptionsType = {\r\n  setCurrTime: React.Dispatch<number>;\r\n  dateTextList: WeekType | [];\r\n  onChangeWeek: (params: 'prevWeek' | 'nextWeek') => void;\r\n  setSwitchWeekendDay: React.Dispatch<'day' | 'week'>;\r\n};\r\n\r\nexport type ScheduleContainerType = {\r\n  data?: dataType[];\r\n  scheduleRender?: ({\r\n    data: dataType,\r\n    timestampRange: timestampRange,\r\n  }) => React.ReactNode;\r\n  rangeStartAndEndKey?: [string, string];\r\n};\r\n\r\nexport type scheduleListType = {\r\n  timestampRange: [number, number];\r\n  dataItem: dataType[];\r\n};\r\n\r\nexport type ScheduleItemType = {\r\n  timestampRange: [number, number];\r\n  dataItem: dataType[];\r\n  scheduleRender?: ({\r\n    data: dataType,\r\n    timestampRange: timestampRange,\r\n  }) => React.ReactNode;\r\n  width: number;\r\n  dataItemLength: number;\r\n  id: string;\r\n  setIsMoving: React.Dispatch<boolean>;\r\n  setMovingTop: React.Dispatch<number>;\r\n  rangeStartAndEndKey?: [string, string];\r\n};\r\n"],"mappings":""}